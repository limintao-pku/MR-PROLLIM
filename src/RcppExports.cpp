// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// f_est_k_prior_loop
NumericVector f_est_k_prior_loop(NumericMatrix k_matr, List s_list, List ss_list, double mychisq, double p0_sp, double p0, double p_cut, double u1, double u2, NumericMatrix sigma);
RcppExport SEXP _MRprollim_f_est_k_prior_loop(SEXP k_matrSEXP, SEXP s_listSEXP, SEXP ss_listSEXP, SEXP mychisqSEXP, SEXP p0_spSEXP, SEXP p0SEXP, SEXP p_cutSEXP, SEXP u1SEXP, SEXP u2SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type k_matr(k_matrSEXP);
    Rcpp::traits::input_parameter< List >::type s_list(s_listSEXP);
    Rcpp::traits::input_parameter< List >::type ss_list(ss_listSEXP);
    Rcpp::traits::input_parameter< double >::type mychisq(mychisqSEXP);
    Rcpp::traits::input_parameter< double >::type p0_sp(p0_spSEXP);
    Rcpp::traits::input_parameter< double >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< double >::type p_cut(p_cutSEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type u2(u2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(f_est_k_prior_loop(k_matr, s_list, ss_list, mychisq, p0_sp, p0, p_cut, u1, u2, sigma));
    return rcpp_result_gen;
END_RCPP
}
// loop_p3_1
NumericVector loop_p3_1(double p1_sp, double p2_sp, double b1, double u1, double u2, double p1, double p2, NumericMatrix s_h, NumericMatrix m_matrix, NumericMatrix post_sample_k1, NumericMatrix post_sample_k2, NumericMatrix f1_matr, NumericMatrix f2_matr, List sigma_prime_list, IntegerVector sign_k1, IntegerVector sign_k2);
RcppExport SEXP _MRprollim_loop_p3_1(SEXP p1_spSEXP, SEXP p2_spSEXP, SEXP b1SEXP, SEXP u1SEXP, SEXP u2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP s_hSEXP, SEXP m_matrixSEXP, SEXP post_sample_k1SEXP, SEXP post_sample_k2SEXP, SEXP f1_matrSEXP, SEXP f2_matrSEXP, SEXP sigma_prime_listSEXP, SEXP sign_k1SEXP, SEXP sign_k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p1_sp(p1_spSEXP);
    Rcpp::traits::input_parameter< double >::type p2_sp(p2_spSEXP);
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type u2(u2SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type s_h(s_hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m_matrix(m_matrixSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k1(post_sample_k1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k2(post_sample_k2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f1_matr(f1_matrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f2_matr(f2_matrSEXP);
    Rcpp::traits::input_parameter< List >::type sigma_prime_list(sigma_prime_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k1(sign_k1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k2(sign_k2SEXP);
    rcpp_result_gen = Rcpp::wrap(loop_p3_1(p1_sp, p2_sp, b1, u1, u2, p1, p2, s_h, m_matrix, post_sample_k1, post_sample_k2, f1_matr, f2_matr, sigma_prime_list, sign_k1, sign_k2));
    return rcpp_result_gen;
END_RCPP
}
// loop_p3_1_indiv_p
NumericMatrix loop_p3_1_indiv_p(double p1_sp, double p2_sp, double b1, double u1, double u2, double p1, double p2, NumericMatrix s_h, NumericMatrix m_matrix, NumericMatrix post_sample_k1, NumericMatrix post_sample_k2, NumericMatrix f1_matr, NumericMatrix f2_matr, List sigma_prime_list, IntegerVector sign_k1, IntegerVector sign_k2);
RcppExport SEXP _MRprollim_loop_p3_1_indiv_p(SEXP p1_spSEXP, SEXP p2_spSEXP, SEXP b1SEXP, SEXP u1SEXP, SEXP u2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP s_hSEXP, SEXP m_matrixSEXP, SEXP post_sample_k1SEXP, SEXP post_sample_k2SEXP, SEXP f1_matrSEXP, SEXP f2_matrSEXP, SEXP sigma_prime_listSEXP, SEXP sign_k1SEXP, SEXP sign_k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p1_sp(p1_spSEXP);
    Rcpp::traits::input_parameter< double >::type p2_sp(p2_spSEXP);
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type u2(u2SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type s_h(s_hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m_matrix(m_matrixSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k1(post_sample_k1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k2(post_sample_k2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f1_matr(f1_matrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f2_matr(f2_matrSEXP);
    Rcpp::traits::input_parameter< List >::type sigma_prime_list(sigma_prime_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k1(sign_k1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k2(sign_k2SEXP);
    rcpp_result_gen = Rcpp::wrap(loop_p3_1_indiv_p(p1_sp, p2_sp, b1, u1, u2, p1, p2, s_h, m_matrix, post_sample_k1, post_sample_k2, f1_matr, f2_matr, sigma_prime_list, sign_k1, sign_k2));
    return rcpp_result_gen;
END_RCPP
}
// loop_p3_1_bi
NumericVector loop_p3_1_bi(double p1_sp, double p2_sp, double b1_t, double u1, double u2, double p1, double p2, double log_appr, NumericMatrix m_matrix, NumericMatrix s_h, NumericMatrix post_sample_k1, NumericMatrix post_sample_k1_exp1, NumericMatrix post_sample_k2, NumericMatrix post_sample_k2_exp1, NumericMatrix post_sample_p, NumericMatrix g1_matr, NumericMatrix g2_matr, List sigma_prime_list, IntegerVector sign_k1, IntegerVector sign_k2);
RcppExport SEXP _MRprollim_loop_p3_1_bi(SEXP p1_spSEXP, SEXP p2_spSEXP, SEXP b1_tSEXP, SEXP u1SEXP, SEXP u2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP log_apprSEXP, SEXP m_matrixSEXP, SEXP s_hSEXP, SEXP post_sample_k1SEXP, SEXP post_sample_k1_exp1SEXP, SEXP post_sample_k2SEXP, SEXP post_sample_k2_exp1SEXP, SEXP post_sample_pSEXP, SEXP g1_matrSEXP, SEXP g2_matrSEXP, SEXP sigma_prime_listSEXP, SEXP sign_k1SEXP, SEXP sign_k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p1_sp(p1_spSEXP);
    Rcpp::traits::input_parameter< double >::type p2_sp(p2_spSEXP);
    Rcpp::traits::input_parameter< double >::type b1_t(b1_tSEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type u2(u2SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< double >::type log_appr(log_apprSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m_matrix(m_matrixSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type s_h(s_hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k1(post_sample_k1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k1_exp1(post_sample_k1_exp1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k2(post_sample_k2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k2_exp1(post_sample_k2_exp1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_p(post_sample_pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type g1_matr(g1_matrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type g2_matr(g2_matrSEXP);
    Rcpp::traits::input_parameter< List >::type sigma_prime_list(sigma_prime_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k1(sign_k1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k2(sign_k2SEXP);
    rcpp_result_gen = Rcpp::wrap(loop_p3_1_bi(p1_sp, p2_sp, b1_t, u1, u2, p1, p2, log_appr, m_matrix, s_h, post_sample_k1, post_sample_k1_exp1, post_sample_k2, post_sample_k2_exp1, post_sample_p, g1_matr, g2_matr, sigma_prime_list, sign_k1, sign_k2));
    return rcpp_result_gen;
END_RCPP
}
// loop_p3_1_bi_indiv_p
NumericMatrix loop_p3_1_bi_indiv_p(double p1_sp, double p2_sp, double b1_t, double u1, double u2, double p1, double p2, double log_appr, NumericMatrix m_matrix, NumericMatrix s_h, NumericMatrix post_sample_k1, NumericMatrix post_sample_k1_exp1, NumericMatrix post_sample_k2, NumericMatrix post_sample_k2_exp1, NumericMatrix post_sample_p, NumericMatrix g1_matr, NumericMatrix g2_matr, List sigma_prime_list, IntegerVector sign_k1, IntegerVector sign_k2);
RcppExport SEXP _MRprollim_loop_p3_1_bi_indiv_p(SEXP p1_spSEXP, SEXP p2_spSEXP, SEXP b1_tSEXP, SEXP u1SEXP, SEXP u2SEXP, SEXP p1SEXP, SEXP p2SEXP, SEXP log_apprSEXP, SEXP m_matrixSEXP, SEXP s_hSEXP, SEXP post_sample_k1SEXP, SEXP post_sample_k1_exp1SEXP, SEXP post_sample_k2SEXP, SEXP post_sample_k2_exp1SEXP, SEXP post_sample_pSEXP, SEXP g1_matrSEXP, SEXP g2_matrSEXP, SEXP sigma_prime_listSEXP, SEXP sign_k1SEXP, SEXP sign_k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p1_sp(p1_spSEXP);
    Rcpp::traits::input_parameter< double >::type p2_sp(p2_spSEXP);
    Rcpp::traits::input_parameter< double >::type b1_t(b1_tSEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type u2(u2SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< double >::type log_appr(log_apprSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m_matrix(m_matrixSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type s_h(s_hSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k1(post_sample_k1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k1_exp1(post_sample_k1_exp1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k2(post_sample_k2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_k2_exp1(post_sample_k2_exp1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_sample_p(post_sample_pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type g1_matr(g1_matrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type g2_matr(g2_matrSEXP);
    Rcpp::traits::input_parameter< List >::type sigma_prime_list(sigma_prime_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k1(sign_k1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sign_k2(sign_k2SEXP);
    rcpp_result_gen = Rcpp::wrap(loop_p3_1_bi_indiv_p(p1_sp, p2_sp, b1_t, u1, u2, p1, p2, log_appr, m_matrix, s_h, post_sample_k1, post_sample_k1_exp1, post_sample_k2, post_sample_k2_exp1, post_sample_p, g1_matr, g2_matr, sigma_prime_list, sign_k1, sign_k2));
    return rcpp_result_gen;
END_RCPP
}
// my_allocate_cpp2
NumericVector my_allocate_cpp2(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _MRprollim_my_allocate_cpp2(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(my_allocate_cpp2(x, y));
    return rcpp_result_gen;
END_RCPP
}
// my_calcu_vcov
NumericMatrix my_calcu_vcov(NumericMatrix x_c, IntegerVector y);
RcppExport SEXP _MRprollim_my_calcu_vcov(SEXP x_cSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x_c(x_cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(my_calcu_vcov(x_c, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MRprollim_f_est_k_prior_loop", (DL_FUNC) &_MRprollim_f_est_k_prior_loop, 10},
    {"_MRprollim_loop_p3_1", (DL_FUNC) &_MRprollim_loop_p3_1, 16},
    {"_MRprollim_loop_p3_1_indiv_p", (DL_FUNC) &_MRprollim_loop_p3_1_indiv_p, 16},
    {"_MRprollim_loop_p3_1_bi", (DL_FUNC) &_MRprollim_loop_p3_1_bi, 20},
    {"_MRprollim_loop_p3_1_bi_indiv_p", (DL_FUNC) &_MRprollim_loop_p3_1_bi_indiv_p, 20},
    {"_MRprollim_my_allocate_cpp2", (DL_FUNC) &_MRprollim_my_allocate_cpp2, 2},
    {"_MRprollim_my_calcu_vcov", (DL_FUNC) &_MRprollim_my_calcu_vcov, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_MRprollim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
